const asyncHandler = require('express-async-handler');
const Contact = require('../models/contactModel');
exports.getContacts = asyncHandler(async (req,res) => {
    const contacts = await Contact.find({user_id:req.user.id});
    res.status(200).json(contacts);
});

exports.createContact = asyncHandler(async (req,res) => {
    console.log(req.body);
    const {name,email,phone} = req.body;
    if (!name || !email || !phone) {
        res.status(400);
        throw new Error('All fields are required')
    }
    const contact = await Contact.create({
        name,
        email,
        phone,
        user_id: req.user.id
    });
    res.status(201).json(contact);
});

exports.getContact = asyncHandler(async (req, res) =>{
    const contact = await Contact.findById(req.params.id);
    if (!contact) {
        res.status(404);
        throw new Error('Contact not found')
    }
    if (contact.user_id.toString() != req.user.id) {
        res.status(403);
        throw new Error('Not authorized');
    }
    res.status(200).json(contact);
});

exports.deleteContact = asyncHandler(async (req, res) =>{
    const contact = await Contact.findById(req.params.id);
    if (!contact) {
        res.status(404);
        throw new Error('Contact not found')
    }
    if (contact.user_id.toString() != req.user.id) {
        res.status(403);
        throw new Error('Not authorized');
    }
    await Contact.deleteOne();
    res.status(200).json(contact);
});

exports.updateContact = asyncHandler(async (req, res) =>{
    const contact = await Contact.findById(req.params.id);
    if (!contact) {
        res.status(404);
        throw new Error('Contact not found')
    };
    if (contact.user_id.toString() != req.user.id) {
        res.status(403);
        throw new Error('Not authorized');
    };
    const updatedContact = await Contact.findByIdAndUpdate(
        req.params.id,
        req.body,
        {new:true},
    );
    res.status(200).json(updatedContact);
});